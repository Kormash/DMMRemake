@page "/"

<body>
    <div style="float:left;width:50%;min-width:600px;background-color:dimgrey;min-height:1000px">
        <div style="float:left">
            <div class="InitiativeWoodTray">
                <div class="InitiativeVelvetTray scrollbar">

                    @foreach (var initiative in InitiativeList)
                    {
                        @if (initiative.IsCurrent)
                        {
                            <div class="InitiativeObject" style="border:3px solid #5c57d0">
                                <div style="float:left">
                                    <t class="unselectable" style="color:white;">@initiative.Name</t>
                                </div>
                                <div class="RemoveInitiative" @onclick="()=>RemoveInitiative(initiative)">

                                </div>
                                <div style="width: 5%;float:right">
                                    <t class="unselectable" style="color:white;">@initiative.Roll</t>
                                </div>
                                @if (initiative.HP != 0)
                                {
                                    <div style="width: 20%;float:right">
                                        <t class="unselectable" style="color:white;float:left">HP: </t>
                                        <input style="width:50%;height:90%;float:left" type="text" @bind="initiative.HP" />
                                    </div>
                                }
                            </div>

                        }
                        else
                        {
                            <div class="InitiativeObject" style="border:2px solid black">
                                <div style="float:left;">
                                    <t class="unselectable" style="color:white">@initiative.Name</t>
                                </div>
                                <div class="RemoveInitiative" @onclick="()=>RemoveInitiative(initiative)">

                                </div>
                                <div style="width: 5%;float:right;">
                                    <t class="unselectable" style="color:white">@initiative.Roll</t>
                                </div>
                                @if (initiative.HP != 0)
                                {
                                    <div style="width: 20%;float:right">
                                        <t class="unselectable" style="color:white;float:left">HP: </t>
                                        <input style="width:50%;height:90%;float:left" type="text" @bind="initiative.HP" />
                                    </div>
                                }
                            </div>

                        }


                    }

                </div>

                <div class="AddInitiativeTextArea">
                    <input style="width:50%" type="text" @bind="InitiativeName" />
                    <input style="width:15%" type="number" @bind="InitiativeRoll" />
                    <t class="unselectable" style="color:white">HP: </t>
                    <input style="width:15%" type="number" @bind="InitiativeHP" />
                </div>
                <div class="AddInitiative" @onclick="()=>AddInitiative()">

                </div>
            </div>
        </div>
        <div style="height:200px; width:auto;float:left;margin:auto;margin-left:6px">
            <div class="SortInitiative" @onclick="()=>SortInitiative()">
                <t class="unselectable" style="color:white">Sort</t>
            </div>
            <div class="NextInitiative" @onclick="()=>NextInitiative()">
                <t class="unselectable" style="color:white">Next</t>
            </div>
            <div class="ClearInitiative" @onclick="()=>ClearInitiative()">
                <t class="unselectable" style="color:white">Clear</t>
            </div>
        </div>
    </div>
        <div style="float: left; width: 50%; min-width: 600px; background-color: dimgrey; min-height: 1000px ">
            <div class="dieButtonContainer">
                <div class="d20Button" @onclick="()=>AddD20()" @oncontextmenu="SubtractD20" @oncontextmenu:preventDefault="true">
                    <div class="CountCircleDie" hidden="@HideD20Count">
                        <t style="color:white" class="unselectable">@d20toRoll</t>
                    </div>
                </div>
                <div class="d12Button" @onclick="()=>AddD12()" @oncontextmenu="SubtractD12" @oncontextmenu:preventDefault="true">
                    <div class="CountCircleDie" hidden="@HideD12Count">
                        <t style="color:white" class="unselectable">@d12toRoll</t>
                    </div>
                </div>
                <div class="d10Button" @onclick="()=>AddD10()" @oncontextmenu="SubtractD10" @oncontextmenu:preventDefault="true">
                    <div class="CountCircleDie" hidden="@HideD10Count">
                        <t style="color:white" class="unselectable">@d10toRoll</t>
                    </div>
                </div>
                <div class="d8Button" @onclick="()=>AddD8()" @oncontextmenu="SubtractD8" @oncontextmenu:preventDefault="true">
                    <div class="CountCircleDie" hidden="@HideD8Count">
                        <t style="color:white" class="unselectable">@d8toRoll</t>
                    </div>
                </div>
                <div class="d6Button" @onclick="()=>AddD6()" @oncontextmenu="SubtractD6" @oncontextmenu:preventDefault="true">
                    <div class="CountCircleDie" hidden="@HideD6Count">
                        <t style="color:white" class="unselectable">@d6toRoll</t>
                    </div>
                </div>
                <div class="d4Button" @onclick="()=>AddD4()" @oncontextmenu="SubtractD4" @oncontextmenu:preventDefault="true">
                    <div class="CountCircleDie" hidden="@HideD4Count">
                        <t style="color:white" class="unselectable">@d4toRoll</t>
                    </div>
                </div>
                <div class="rollButton" @onclick="()=>RollDice()">
                </div>
                <div class="CancelButton" hidden="@HideCancel" @onclick="()=>ClearDices()">
                </div>
            </div>

            <div class="woodTray" style="background-image: url(images/diceTrayWood.png)">
                <div class="velvetTray" style="background-image: url(images/diceTrayRed.png)">
                    <div class="scrollbar">
                        @foreach (var dice in d100List)
                        {
                            <div class="d100Die" @onclick="()=>RemoveDice(dice)">
                                <t class="DiceText" style="font-family:ModestoBold;">@dice.DiceResult</t>
                            </div>
                            @if (dice.Equals(d100List.Last()))
                            {
                                <div style="float:left;width:100%;height:6px"></div>
                            }
                        }

                        @foreach (var dice in d20List)
                        {
                            <div class="d20Die" @onclick="()=>RemoveDice(dice)">
                                <t class="DiceText" style="font-family:ModestoBold;">@dice.DiceResult</t>
                            </div>
                            @if (dice.Equals(d20List.Last()))
                            {
                                <div style="float:left;width:100%;height:6px"></div>
                            }
                        }

                        @foreach (var dice in d12List)
                        {
                            <div class="d12Die" @onclick="()=>RemoveDice(dice)">
                                <t class="DiceText" style="font-family:ModestoBold;">@dice.DiceResult</t>
                            </div>
                            @if (dice.Equals(d12List.Last()))
                            {
                                <div style="float:left;width:100%;height:6px"></div>
                            }
                        }

                        @foreach (var dice in d10List)
                        {
                            <div class="d10Die" @onclick="()=>RemoveDice(dice)">
                                <t class="DiceText" style="font-family:ModestoBold;">@dice.DiceResult</t>
                            </div>
                            @if (dice.Equals(d10List.Last()))
                            {
                                <div style="float:left;width:100%;height:6px"></div>
                            }
                        }

                        @foreach (var dice in d8List)
                        {
                            <div class="d8Die" @onclick="()=>RemoveDice(dice)">
                                <t class="DiceText" style="font-family:ModestoBold;">@dice.DiceResult</t>
                            </div>
                            @if (dice.Equals(d8List.Last()))
                            {
                                <div style="float:left;width:100%;height:6px"></div>
                            }
                        }

                        @foreach (var dice in d6List)
                        {
                            <div class="d6Die" @onclick="()=>RemoveDice(dice)">
                                <t class="DiceText" style="font-family:ModestoBold;">@dice.DiceResult</t>
                            </div>
                            @if (dice.Equals(d6List.Last()))
                            {
                                <div style="float:left;width:100%;height:6px"></div>
                            }
                        }

                        @foreach (var dice in d4List)
                        {
                            <div class="d4Die" @onclick="()=>RemoveDice(dice)">
                                <t class="DiceText" style="font-family:ModestoBold;">@dice.DiceResult</t>
                            </div>
                            @if (dice.Equals(d4List.Last()))
                            {
                                <div style="float:left;width:100%;height:6px"></div>
                            }
                        }

                    </div>

                </div>
                <div class="dieResultContainer">
                    @if (d100List.Count != 0)
                    {
                        <p style="font-family:ModestoRegular;color:ghostwhite;margin:0;text-align:center">D100</p>
                        <div class="dieResult" style="background-image: url(images/whitebackground.png)">
                            <t style="font-family: ModestoBold; color: black; margin: 0;">@d100List.Sum(x => x.DiceResult)</t>
                        </div>
                    }
                    @if (d20List.Count != 0)
                    {
                        <p style="font-family:ModestoRegular;color:ghostwhite;margin:0;text-align:center">D20</p>
                        <div class="dieResult" style="background-image: url(images/whitebackground.png)">
                            <t style="font-family: ModestoBold; color: black; margin: 0;">@d20List.Sum(x => x.DiceResult)</t>
                        </div>
                    }
                    @if (d12List.Count != 0)
                    {
                        <p style="font-family:ModestoRegular;color:ghostwhite;margin:0;text-align:center">D12</p>
                        <div class="dieResult" style="background-image: url(images/whitebackground.png)">
                            <t style="font-family: ModestoBold; color: black; margin: 0;">@d12List.Sum(x => x.DiceResult)</t>
                        </div>
                    }
                    @if (d10List.Count != 0)
                    {
                        <p style="font-family:ModestoRegular;color:ghostwhite;margin:0;text-align:center">D10</p>
                        <div class="dieResult" style="background-image: url(images/whitebackground.png)">
                            <t style="font-family: ModestoBold; color: black; margin: 0;">@d10List.Sum(x => x.DiceResult)</t>
                        </div>
                    }
                    @if (d8List.Count != 0)
                    {
                        <p style="font-family:ModestoRegular;color:ghostwhite;margin:0;text-align:center">D8</p>
                        <div class="dieResult" style="background-image: url(images/whitebackground.png)">
                            <t style="font-family: ModestoBold; color: black; margin: 0;">@d8List.Sum(x => x.DiceResult)</t>
                        </div>
                    }
                    @if (d6List.Count != 0)
                    {
                        <p style="font-family:ModestoRegular;color:ghostwhite;margin:0;text-align:center">D6</p>
                        <div class="dieResult" style="background-image: url(images/whitebackground.png)">
                            <t style="font-family: ModestoBold; color: black; margin: 0;">@d6List.Sum(x => x.DiceResult)</t>
                        </div>
                    }
                    @if (d4List.Count != 0)
                    {
                        <p style="font-family:ModestoRegular;color:ghostwhite;margin:0;text-align:center">D4</p>
                        <div class="dieResult" style="background-image: url(images/whitebackground.png)">
                            <t style="font-family: ModestoBold; color: black; margin: 0;">@d4List.Sum(x => x.DiceResult)</t>
                        </div>
                    }


                </div>
            </div>
        </div>
</body>

@code
{
    bool HideCancel = true;
    List<Initiative> InitiativeList = new();
    string InitiativeName = "";
    int InitiativeRoll = 0;
    int InitiativeHP = 0;

    Random rand = new Random();

    List<Dice> d100List = new();
    List<Dice> d20List = new();
    List<Dice> d12List = new();
    List<Dice> d10List = new();
    List<Dice> d8List = new();
    List<Dice> d6List = new();
    List<Dice> d4List = new();

    int d100toRoll = 0;
    int d20toRoll = 0;
    int d12toRoll = 0;
    int d10toRoll = 0;
    int d8toRoll = 0;
    int d6toRoll = 0;
    int d4toRoll = 0;

    bool HideD100Count = true;
    bool HideD20Count = true;
    bool HideD12Count = true;
    bool HideD10Count = true;
    bool HideD8Count = true;
    bool HideD6Count = true;
    bool HideD4Count = true;

    bool CanEdit = false;

    DiceModel diceModel = new();

    public void AddD100()
    {
        d100toRoll++;
        HideD100Count = false;
    }
    public void SubtractD100()
    {
        if (d100toRoll > 0)
        {
            d100toRoll--;
        }
        if (d100toRoll == 0)
        {
            HideD100Count = true;
        }
    }
    public void AddD20()
    {
        d20toRoll++;
        HideD20Count = false;
    }
    public void SubtractD20()
    {
        if (d20toRoll > 0)
        {
            d20toRoll--;
        }
        if (d20toRoll == 0)
        {
            HideD20Count = true;
        }
    }
    public void AddD12()
    {
        d12toRoll++;
        HideD12Count = false;
    }
    public void SubtractD12()
    {
        if (d12toRoll > 0)
        {
            d12toRoll--;
        }
        if (d12toRoll == 0)
        {
            HideD12Count = true;
        }
    }
    public void AddD10()
    {
        d10toRoll++;
        HideD10Count = false;
    }
    public void SubtractD10()
    {
        if (d10toRoll > 0)
        {
            d10toRoll--;
        }
        if (d10toRoll == 0)
        {
            HideD10Count = true;
        }
    }
    public void AddD8()
    {
        d8toRoll++;
        HideD8Count = false;
    }
    public void SubtractD8()
    {
        if (d8toRoll > 0)
        {
            d8toRoll--;
        }
        if (d8toRoll == 0)
        {
            HideD8Count = true;
        }
    }
    public void AddD6()
    {
        d6toRoll++;
        HideD6Count = false;
    }
    public void SubtractD6()
    {
        if (d6toRoll > 0)
        {
            d6toRoll--;
        }
        if (d6toRoll == 0)
        {
            HideD6Count = true;
        }
    }
    public void AddD4()
    {
        d4toRoll++;
        HideD4Count = false;
    }
    public void SubtractD4()
    {
        if (d4toRoll > 0)
        {
            d4toRoll--;
        }
        if (d4toRoll == 0)
        {
            HideD4Count = true;
        }
    }
    public void RollDice()
    {
        if (d100toRoll != 0)
        {
            for(int i = 0; i < d100toRoll; i++)
            {
                Dice d = new();
                d.DiceType = 100;
                d.DiceResult = rand.Next(1,101);
                d100List.Add(d);
            }
            HideCancel = false;
        }
        if (d20toRoll != 0)
        {
            for (int i = 0; i < d20toRoll; i++)
            {
                Dice d = new();
                d.DiceType = 20;
                d.DiceResult = rand.Next(1, 21);
                d20List.Add(d);
            }
            HideCancel = false;
        }
        if (d12toRoll != 0)
        {
            for (int i = 0; i < d12toRoll; i++)
            {
                Dice d = new();
                d.DiceType = 12;
                d.DiceResult = rand.Next(1, 13);
                d12List.Add(d);
            }
            HideCancel = false;
        }
        if (d10toRoll != 0)
        {
            for (int i = 0; i < d10toRoll; i++)
            {
                Dice d = new();
                d.DiceType = 10;
                d.DiceResult = rand.Next(1, 11);
                d10List.Add(d);
            }
            HideCancel = false;
        }
        if (d8toRoll != 0)
        {
            for (int i = 0; i < d8toRoll; i++)
            {
                Dice d = new();
                d.DiceType = 8;
                d.DiceResult = rand.Next(1, 9);
                d8List.Add(d);
            }
            HideCancel = false;
        }
        if (d6toRoll != 0)
        {
            for (int i = 0; i < d6toRoll; i++)
            {
                Dice d = new();
                d.DiceType = 6;
                d.DiceResult = rand.Next(1, 7);
                d6List.Add(d);
            }
            HideCancel = false;
        }
        if (d4toRoll != 0)
        {
            for (int i = 0; i < d4toRoll; i++)
            {
                Dice d = new();
                d.DiceType = 4;
                d.DiceResult = rand.Next(1, 5);
                d4List.Add(d);
            }
            HideCancel = false;
        }

        HideD100Count = true;
        HideD20Count = true;
        HideD12Count = true;
        HideD10Count = true;
        HideD8Count = true;
        HideD6Count = true;
        HideD4Count = true;

        d100toRoll = 0;
        d20toRoll = 0;
        d12toRoll = 0;
        d10toRoll = 0;
        d8toRoll = 0;
        d6toRoll = 0;
        d4toRoll = 0;

        //SortDice();
    }

    public void SortDice()
    {
        if (d100List.Any())
        {
            d100List.Sort();
        }
        if (d20List.Any())
        {
            d20List.Sort();
        }
        if (d12List.Any())
        {
            d12List.Sort();
        }
        if (d10List.Any())
        {
            d10List.Sort();
        }
        if (d6List.Any())
        {
            d6List.Sort();
        }
        if (d4List.Any())
        {
            d4List.Sort();
        }
    }

    public void ClearDices()
    {
        HideCancel = true;
        d100List = new();
        d20List = new();
        d12List = new();
        d10List = new();
        d8List = new();
        d6List = new();
        d4List = new();
    }

    public void RemoveDice(Dice dice)
    {
        switch (dice.DiceType)
        {
            case 100:
                d100List.Remove(dice);
                break;
            case 20:
                d20List.Remove(dice);
                break;
            case 12:
                d12List.Remove(dice);
                break;
            case 10:
                d10List.Remove(dice);
                break;
            case 8:
                d8List.Remove(dice);
                break;
            case 6:
                d6List.Remove(dice);
                break;
            case 4:
                d4List.Remove(dice);
                break;
        }

        if (d100List.Count() == 0 && d20List.Count() == 0 && d12List.Count() == 0 && d10List.Count() == 0 && d8List.Count() == 0 && d6List.Count() == 0 && d4List.Count() == 0)
        {
            HideCancel = true;
        }

    }

    public void AddInitiative()
    {
        Initiative i = new();
        i.Name = InitiativeName;
        i.Roll = InitiativeRoll;
        i.HP = InitiativeHP;
        i.IsCurrent = false;

        if (InitiativeList.Count == 0 || InitiativeList.First().IsCurrent == false)
        {
            InitiativeList.Add(i);
        }
        else
        {
            int index = 0;
            foreach (var initiative in InitiativeList)
            {
                if (InitiativeList.Max(x => x.Roll) > i.Roll && InitiativeList.Min(x => x.Roll) < i.Roll)
                {
                    index = InitiativeList.FindIndex(x => x == initiative);
                    if (initiative.Roll > i.Roll && (InitiativeList.Count() < index + 2 || InitiativeList[index + 1].Roll <= i.Roll))
                    {
                        index++;
                        break;
                    }
                }
                else
                {
                    if (InitiativeList.Max(x => x.Roll) <= i.Roll && initiative.Roll == InitiativeList.Max(x => x.Roll))
                    {
                        index = InitiativeList.FindIndex(x => x == initiative);
                        break;
                    }
                    if (InitiativeList.Min(x => x.Roll) >= i.Roll && initiative.Roll == InitiativeList.Min(x => x.Roll))
                    {
                        index = InitiativeList.FindIndex(x => x == initiative) + 1;
                        break;
                    }
                }

            }
            if (index < InitiativeList.Count && index != 0)
            {
                InitiativeList.Insert(index, i);
            }
            else
            {
                InitiativeList.Add(i);
            }

        }


        InitiativeName = "";
        InitiativeRoll = 0;
        InitiativeHP = 0;
    }

    public void RemoveInitiative(Initiative i)
    {
        InitiativeList.Remove(i);
        if (i.IsCurrent == true && InitiativeList.Count > 0)
        {
            InitiativeList.First().IsCurrent = true;
        }
    }

    public void SortInitiative()
    {
        if (InitiativeList.Count > 0)
        {
            InitiativeList = InitiativeList.OrderBy(x => x.Roll).Reverse().ToList();
            foreach (var i in InitiativeList)
            {
                i.IsCurrent = false;
            }
            InitiativeList.First().IsCurrent = true;
        }

    }

    public void NextInitiative()
    {
        if (InitiativeList.Count > 0)
        {
            Initiative i = InitiativeList.First();
            InitiativeList.Remove(i);
            i.IsCurrent = false;
            InitiativeList.Add(i);
            InitiativeList.First().IsCurrent = true;
        }
    }

    public void ClearInitiative()
    {
        InitiativeList = new();
    }

    public class DiceModel
    {
        public int DiceType { get; set; }

        public int DiceNumber { get; set; }

        public int DiceSum { get; set; }

        public string ResultString { get; set; }
    }

    public class Dice
    {
        public int DiceType { get; set; }
        public int DiceResult { get; set; }
    }

    public class Initiative
    {
        public string Name { get; set; }
        public int Roll { get; set; }

        public int HP { get; set; }
        public bool IsCurrent { get; set; }


    }
}